
process {

    publishDir = [
        path: { task.label ? "${params.outdir}/${task.label.join('/')}/${task.process.tokenize(':')[-1].toLowerCase()}" : "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    cpus   = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory = { check_max( 7.GB * task.attempt, 'memory' ) }
    time   = { check_max( 4.h  * task.attempt, 'time'   ) }
    errorStrategy = 'finish'

    // catch any process without a container.
    // this must be first in the list of withName/withLabel selectors for containers.
    withName: ".*" {
        container = 'nciccbr/ccbr_ubuntu_base_20.04:latest'
    }
    withName: 'MAGECK.*' {
        container = 'quay.io/biocontainers/mageck:0.5.9.5--py39h1f90b4d_3'
    }
    withName: 'VISPR.*' {
        container = 'quay.io/biocontainers/mageck-vispr:0.5.6--py_0'
    }
    withName: 'BAGEL.*' {
        container = 'nciccbr/cruise_bagel_2.0:0.1.0'
    }
    withName: 'DRUGZ.*' {
        container = 'nciccbr/cruise_drugz:0.1.0'
    }
}
